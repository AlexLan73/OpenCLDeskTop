ПРИМЕРНОЕ ОПИСАНИЕ СТРУКТУРЫ ПРОГРАММЫ

DeskTop.exe
│
├── Commomn.dll
│ 	  └─ Core
│ 	  		└─ ChannelBase.cs
├─── Logger.dll
├ прочие DLL модули
├ прочие DLL модули  
├ прочие DLL модули 
├─── DATA.dll
│ 		├─ DMemory.dll
│  		├─ PostgreSQL.dll
│ 		├─ Sqlite.dll
│ 		├─ прочие модули формирующие данные
│ 		└─ CAN.dll
и прочие dll 
Мы пока работаем только в DMemory.dll
сейчас нам нужно полученные данные от DMemory из  public class MemoryDataProcessor     
var ramData = new RamData(deserializedObj, dataType, new MapCommands(metaData));
    // Вызов события с готовыми данными — уведомляем "верх"
    _onDataReceived?.Invoke(ramData);
разобрать конвертировать в классы описанные в ChannelBase.cs и записать в DATA.dll.
после этой операции данные будут видны во всем проекте.
В DATA.dll должен быть создан алгоритм в котором в каком то классе создаются модули по названию памяти
  DATA.dll
  ├─ CUDA -> работаем с памятью CUDA. вызываем классы из  DMemory и взаимодействуем рерультат пишемв
	конвертируемые значения в SourceList<T> их кол-во определяется кол-вом из ChannelBase 
	один поток будет получать данные из DMemory и записывать в SourceList<T> другой по событию будет их разбирать 
	и передавать дальше
  ├─ clFFT
  ├─ STATISTIC
    и другие сколько и какие я не знаю. 	
когда это отладим следующий шаг наши структуры будут записывать данные в контейнер или контейнеры для дальнейшей математической обработки и построение графиков
в дальнейшем у нас будут контейнеры и передача данный через ReactivUI
Это примерная структура/ все понятно? Есть вопросы? Предлагай замечания. Ты же у меня УМНИЦА)))



